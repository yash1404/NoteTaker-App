{"version":3,"sources":["Components/Addnote.js","Components/Notes.js","Components/Notelist.js","Components/Search.js","App.js","index.js"],"names":["Addnote","handlesave","useState","textvalue","settextvalue","className","rows","column","placeholder","value","onChange","e","target","length","onClick","trim","Notes","objectvalue","deletehandle","id","text","date","size","Notelist","Fragment","map","curr","i","Search","handlesearch","type","App","content","setcontent","searchtext","setsearchtext","useEffect","getdata","JSON","parse","localStorage","getItem","setItem","stringify","filter","includes","Date","newnote","nanoid","toLocaleDateString","newNotes","deletenote","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8MAiCeA,MA/Bf,YAAkC,IAAfC,EAAc,EAAdA,WAIf,EAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KAcA,OACI,sBAAKC,UAAU,cAAf,UACI,0BAAUC,KAAK,IAAIC,OAAO,KAAKC,YAAY,mBAAmBC,MAAON,EAAWO,SAbjE,SAACC,GAFJ,IAGCA,EAAEC,OAAOH,MAAMI,QAAQ,GACpCT,EAAaO,EAAEC,OAAOH,UAatB,sBAAKJ,UAAU,aAAf,UAEI,wBAAOA,UAAU,cAAjB,UAnBQ,IAmBsCF,EAAUU,OAAxD,gBACA,oBAAIR,UAAU,OAAOS,QAbX,WACfX,EAAUY,OAAOF,OAAO,IACvBZ,EAAWE,GACXC,EAAa,MAUT,yB,OCTDY,MAff,YAA4C,IAA5BC,EAA2B,EAA3BA,YAAYC,EAAe,EAAfA,aAClBC,EAAcF,EAAdE,GAAGC,EAAWH,EAAXG,KAAKC,EAAMJ,EAANI,KACd,OACI,sBAAKhB,UAAU,OAAf,UACI,+BAAOe,IACP,sBAAKf,UAAU,aAAf,UACI,gCAAQgB,IACR,cAAC,IAAD,CAAiBP,QAAS,kBAAII,EAAaC,IAC3Cd,UAAU,cACViB,KAAK,kBCkBNC,MA1Bf,YAAoD,IAAjCd,EAAgC,EAAhCA,MAAMR,EAA0B,EAA1BA,WAAWiB,EAAe,EAAfA,aAChC,OACI,eAAC,IAAMM,SAAP,eAGS,sBAAKnB,UAAU,YAAf,UAEKI,EAAMgB,KAAI,SAACC,EAAKC,GACZ,OACF,cAAC,EAAD,CAAeV,YAAaS,EAAMR,aAAcA,GAApCS,MAIlB,cAAC,EAAD,CAAS1B,WAAYA,W,OCLxB2B,MAVf,YAAiC,IAAhBC,EAAe,EAAfA,aACb,OACI,sBAAKxB,UAAU,SAAf,UACG,cAAC,IAAD,CAAUA,UAAU,cAAciB,KAAK,WACvC,uBAAOQ,KAAK,OAAOtB,YAAY,sBAAsBE,SAAU,SAACC,GAAD,OAAKkB,EAAalB,EAAEC,OAAOH,cC+DtFsB,MAhEf,WAGE,MAA8B7B,mBAAS,IAAvC,mBAAO8B,EAAP,KAAgBC,EAAhB,KACA,EAAiC/B,mBAAS,IAA1C,mBAAOgC,EAAP,KAAkBC,EAAlB,KA6CA,OArCAC,qBAAU,WACR,IAAMC,EAAQC,KAAKC,MAAMC,aAAaC,QAAQ,mBAG1CJ,GACFJ,EAAWI,KAEX,IAIJD,qBAAU,WACRI,aAAaE,QAAQ,iBAAiBJ,KAAKK,UAAUX,MACrD,CAACA,IAyBD,sBAAK3B,UAAU,YAAf,UACA,oBAAIA,UAAU,OAAd,0CACA,cAAC,EAAD,CAAQwB,aAAcM,IACpB,cAAC,EAAD,CAAU1B,MAAOuB,EAAQY,QAAO,SAAClB,GAC/B,OACEA,EAAKN,KAAKyB,SAASX,MAGvBjC,WA3Be,SAACmB,GAClB,IAAMC,EAAO,IAAIyB,KACXC,EAAU,CACd5B,GAAI6B,cACJ5B,KAAMA,EACNC,KAAMA,EAAK4B,sBAEPC,EAAQ,sBAAOlB,GAAP,CAAgBe,IAC9Bd,EAAWiB,IAoBThC,aAhBiB,SAACC,GACpB,IAAMgC,EAAanB,EAAQY,QAAO,SAAClB,GAAD,OAAUA,EAAKP,KAAOA,KACxDc,EAAWkB,UC7CfC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.4063551c.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\n\r\nfunction Addnote({ handlesave }) {\r\n\r\n\r\n\r\n    const [textvalue, settextvalue] = useState(\"\");\r\n    const variablecount=500;\r\n\r\n    const handleonchange = (e) => {\r\n        if(variablecount-e.target.value.length>=0){\r\n            settextvalue(e.target.value)\r\n        }\r\n    }\r\n    const handleonclick = () => {\r\n        if(textvalue.trim().length>0){\r\n            handlesave(textvalue)  \r\n            settextvalue(\"\")\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"note newone\">\r\n            <textarea rows=\"8\" column=\"10\" placeholder=\"Add text here...\" value={textvalue} onChange={handleonchange} />\r\n\r\n            <div className=\"footer-sec\">\r\n\r\n                <small className=\"wordsremain\">{variablecount-textvalue.length} remaining</small>\r\n                <h4 className=\"save\" onClick={handleonclick}>Save</h4>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Addnote\r\n","import React from 'react'\r\nimport { MdDeleteForever } from \"react-icons/md\"\r\n\r\nfunction Notes({objectvalue,deletehandle}) {\r\n    const{id,text,date}=objectvalue;\r\n    return (\r\n        <div className=\"note\">\r\n            <span>{text}</span>\r\n            <div className=\"footer-sec\">\r\n                <small>{date}</small>\r\n                <MdDeleteForever onClick={()=>deletehandle(id)} \r\n                className=\"delete-icon\" \r\n                size=\"1.8rem\"/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notes\r\n","import React from 'react'\r\nimport Addnote from './Addnote'\r\nimport Notes from './Notes'\r\n\r\nfunction Notelist({value,handlesave,deletehandle}) {\r\n    return (\r\n        <React.Fragment> {\r\n        \r\n             \r\n                 <div className=\"note-list\">\r\n                  {\r\n                      value.map((curr,i)=>{\r\n                          return(\r\n                        <Notes key={i} objectvalue={curr} deletehandle={deletehandle}/>\r\n                          )\r\n                      })\r\n                  }\r\n                  <Addnote handlesave={handlesave}/>\r\n\r\n                 </div>\r\n                 \r\n             \r\n        \r\n        }\r\n        </React.Fragment>\r\n       \r\n\r\n    )\r\n}\r\n\r\nexport default Notelist\r\n","import React from 'react'\r\nimport {MdSearch} from \"react-icons/md\"\r\nfunction Search({handlesearch}) {\r\n    return (\r\n        <div className=\"search\">\r\n           <MdSearch className=\"search-icon\" size=\"1.3rem\"/> \r\n           <input type=\"text\" placeholder=\"Find Your Notes....\" onChange={(e)=>handlesearch(e.target.value)} />\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Search\r\n","import React, { useState,useEffect } from 'react'\nimport Notelist from './Components/Notelist'\nimport { nanoid } from \"nanoid\"\nimport Search from './Components/Search'\n\nfunction App() {\n\n\n  const [content, setcontent] = useState([])\n  const [searchtext,setsearchtext]=useState('')\n\n\n\n\n\n  // getting the data from local storage\n\n  useEffect(()=>{\n    const getdata=JSON.parse(localStorage.getItem(\"react-note-app\"));\n  \n    // after getting data update the content variable\n    if (getdata){\n      setcontent(getdata);\n    }\n    },[])\n\n  // adding data inside localstorage\n   \n  useEffect(()=>{\n    localStorage.setItem(\"react-note-app\",JSON.stringify(content));\n  },[content])\n\n\n\n\n  // adding the new notes ...\n  const savehandle = (text) => {\n    const date = new Date();\n    const newnote = {\n      id: nanoid(),\n      text: text,\n      date: date.toLocaleDateString(),\n    }\n    const newNotes = [...content, newnote];\n    setcontent(newNotes);\n  }\n\n  // delete the notes..\n  const deletehandle = (id) => {\n    const deletenote = content.filter((curr) => curr.id !== id)\n    setcontent(deletenote)\n  }\n\n\n  return (\n    <div className=\"container\">\n    <h1 className=\"head\"> Note Taker AppðŸ““ </h1>\n    <Search handlesearch={setsearchtext}/>\n      <Notelist value={content.filter((curr)=>{\n        return(\n          curr.text.includes(searchtext)\n        )\n      })} \n      handlesave={savehandle} \n      deletehandle={deletehandle} />\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}